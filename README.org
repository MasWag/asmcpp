* asm.c++

[[https://github.com/MasWag/asmcpp/workflows/fibonacci/badge.svg]]
[[https://github.com/MasWag/asmcpp/workflows/static_analysis/badge.svg]]

asm.c++ is a simple monitor generator for C++ programs. Given a configuration of the monitored functions, asm.c++ automatically inject the monitoring function using [[https://www.aspectc.org/][Aspect C++]].

** Requirements

asm.c++ is based on Aspect C++. In Ubuntu, Aspect C++ can be installed by the following command. For the other environments, binary distribution of Aspect C++ is found at the [[https://www.aspectc.org/][official web page]].

#+BEGIN_SRC sh
apt install make aspectc++ -y
#+END_SRC

** Usage

#+BEGIN_EXAMPLE
Usage: asmc++ [MONITORED_FILE] -c [CONF_FILE] -o [OUTPUT_FILE]
Example: asmc++ sample.cc -c sample.conf -o sample_monitored.cc
#+END_EXAMPLE

** Format of the configuration file

The format of the configuration file is as follows. Each line shows the information of the monitored function. The first field of the comma-separated fields shows the return type and the name of the monitored function and the remaining fields show the arguments with the types. We note that when the =[RETURN_TYPE]= is omitted, the monitor does not report anything after the function call. In order to report the return of the function call, please write void in the return type. When the input arguments are omitted, only the call of the function is reported.

#+BEGIN_EXAMPLE
([RETURN_TYPE]) [FUNCTION_NAME], [TYPE] [ARG_NAME], [TYPE] [ARG_NAME], ...
([RETURN_TYPE]) [FUNCTION_NAME], [TYPE] [ARG_NAME], [TYPE] [ARG_NAME], ...
...
#+END_EXAMPLE

An example of the configuration file is as follows.

#+BEGIN_SRC text :tangle ./examples/fibonacci/asm.conf
int fibonacci, int i
fibonacci_impl, int a, int b, int c
#+END_SRC

** Materials

- [[https://ess.cs.tu-dortmund.de/Teaching/SS2018/SuS/Downloads/ac-tutorial.pdf][Tutorial of AspectC++]]
